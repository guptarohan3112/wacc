/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.4.20'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'antlr'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // dependency for kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    // Dependency for the mockk testing setup
    testImplementation "io.mockk:mockk:1.10.5"

    antlr "org.antlr:antlr4:4.9.1"
}

sourceSets {
    main {
        kotlin {
            srcDirs += 'src/main/kotlin/'
        }

        java {
            srcDirs += 'src/main/java/'
        }
    }

    test {
        kotlin {
            srcDirs += 'src/test/'
        }
    }

    semanticTests {
        main {
            kotlin {
                srcDirs += 'src/main/kotlin/'
            }
            java {
                srcDirs += 'src/main/java/'
            }
        }
        test {
            kotlin {
                srcDirs += 'src/test/kotlin/wacc_05/semantic_tests/'
            }
        }
    }
}

// only while we are still using STD input, to be removed
run {
    standardInput = System.in
}

application {
    // Define the main class for the application.
    mainClass = 'wacc_05/AppKt'
}

test {
    useJUnit {}
    testLogging {
        showStandardStreams = true
    }

    beforeTest { descriptor -> "Running test: " + descriptor }

    // set to true to fail on first test failure
    failFast = false
}

task semanticTests(type: Test) {

}